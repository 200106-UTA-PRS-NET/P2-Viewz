# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
pr: none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'jdf-revature'
    scannerMode: 'MSBuild'
    projectKey: 'jdf.viewz'
    extraProperties: |
        sonar.exclusions=**/wwwroot/lib/**/*
        sonar.cs.opencover.reportsPaths="$(Build.ArtifactStagingDirectory)/coverage/*"
        sonar.cs.vstest.reportsPaths="$(Build.ArtifactStagingDirectory)/test/*.trx"

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- script: dotnet test
    --configuration $(buildConfiguration)
    --logger trx
    --no-build
    --results-directory $(Build.ArtifactStagingDirectory)/test/
    /p:CollectCoverage=true
    /p:CoverletOutputFormat=opencover
    /p:CoverletOutput="$(Build.ArtifactStagingDirectory)/coverage/"
  displayName: 'Dotnet test and coverage'
- task: SonarCloudAnalyze@1
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    arguments: '--configuration $(buildConfiguration)'
    zipAfterPublish: true
    projects: '**/Viewz*.csproj'
  displayName: 'DotNet publish api and app + zip'


- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Azure subscription 1(54320e88-cfc4-4aec-90cf-a5c188c75dd0)'
    appType: 'webAppLinux'
    appName: 'viewz'
    package: '$(System.DefaultWorkingDirectory)/ViewzApp/**/*.zip'

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Azure subscription 1(54320e88-cfc4-4aec-90cf-a5c188c75dd0)'
    appType: 'webAppLinux'
    appName: 'viewzapi'
    package: '$(System.DefaultWorkingDirectory)/ViewzApi/**/*.zip'